# -*- coding: utf-8 -*-
from airflow import DAG
from datetime import datetime, timedelta
from airflow.operators.python import PythonOperator
from airflow.models import Variable
from lib.helper import get_ssm_pem, run_remote_cmds
import logging
import requests
import sys

CUSTOMER = '{{ customer }}'
host_ip = Variable.get(f"{CUSTOMER}_ip")
host_user = 'lucidum-support'


def run_action(version):
    ssh_key_pem = get_ssm_pem(host_ip, aws_profile=None)
    # run cmds on host instance
    logging.info(f"connect to {host_ip} run cmd on action version: {version}")
    commands = [
        f"docker run --rm --network=lucidum_default -it action-manager:{version} python lucidum_action.py process-actions"]
    run_remote_cmds(host_ip, ssh_key_pem, commands, username=host_user, keytype='OPENSSH')


default_args = {
    'owner': 'airflow',
    'description': 'Schedule DockerOperator',
    'depend_on_past': False,
    'start_date': datetime.today() - timedelta(days=1),
    'email_on_failure': True,
    'email_on_retry': True,
    'email': ['support@lucidum.io'],
    'retries': 3,
    'retry_delay': timedelta(minutes=5)
}

# Schedule_interval definition
# preset: @hourly, @daily, @weekly, @monthly, @yearly
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat

with DAG(f'action_manager_{CUSTOMER}',
         default_args=default_args,
         schedule="*/5 * * * *",
         catchup=False) as dag:

    resp = requests.get(f'http://{host_ip}:8000/update-manager/api/versions')
    resp.raise_for_status()
    local_settings = resp.json()

    if not local_settings.get('action-manager', {}).get('version'):
        logging.error(f'!!!!!!!!!! Missing version for action manager')
        sys.exit(-1)
    version = local_settings.get('action-manager').get('version')

    t1 = PythonOperator(task_id='run_action_manager',
                        dag=dag,
                        python_callable=run_action,
                        execution_timeout=timedelta(hours=1),
                        op_kwargs={'version': version}
                        )

    t1